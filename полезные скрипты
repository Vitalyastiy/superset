–ü–æ–ª–µ–∑–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
-- –ê–ù–ê–õ–ò–ó –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –ß–ê–†–¢–û–í
WITH chart_loads AS (
  SELECT
    SUBSTRING(json FROM '"slice_id": ?([0-9]+)')::INT as chart_id,
    SUBSTRING(json FROM '"source_id": ?([0-9]+)')::INT as dashboard_id,
    
    -- –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)
    CASE 
      WHEN json LIKE '%duration%' THEN 
        SUBSTRING(json FROM '"duration": ?([0-9.]+)')::DECIMAL
      WHEN json LIKE '%load_time%' THEN 
        SUBSTRING(json FROM '"load_time": ?([0-9.]+)')::DECIMAL
      WHEN json LIKE '%response_time%' THEN 
        SUBSTRING(json FROM '"response_time": ?([0-9.]+)')::DECIMAL
      ELSE NULL
    END as load_time_ms,
    
    SUBSTRING(json FROM '"impression_id": ?"([^"]+)"') as session_id,
    dttm
    
  FROM logs
  WHERE (json LIKE '%load_chart%' OR json LIKE '%chart_load%' OR json LIKE '%slice_id%')
    AND json NOT LIKE '%error%'  -- –ò—Å–∫–ª—é—á–∞–µ–º –æ—à–∏–±–∫–∏
    AND dttm >= CURRENT_DATE - INTERVAL '7 days'
    AND SUBSTRING(json FROM '"slice_id": ?([0-9]+)')::INT IS NOT NULL
)

SELECT
  '‚è±Ô∏è SLOW CHART PERFORMANCE' as report_type,
  
  cl.chart_id,
  s.slice_name as chart_name,
  s.viz_type as chart_type,
  d.dashboard_title as parent_dashboard,
  
  -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–æ–∫
  COUNT(*) as load_count,
  COUNT(DISTINCT cl.session_id) as affected_users,
  
  -- –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  ROUND(AVG(cl.load_time_ms / 1000.0), 2) as avg_load_time_sec,
  ROUND(MAX(cl.load_time_ms), 0) as max_load_ms,
  ROUND(MIN(cl.load_time_ms), 0) as min_load_ms,
  
  -- –ü—Ä–æ—Ü–µ–Ω—Ç –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫ (< 3 —Å–µ–∫)
  ROUND(
    COUNT(CASE WHEN cl.load_time_ms < 3000 THEN 1 END) * 100.0 / COUNT(*), 
    1
  ) as fast_loads_percent,
  
  -- –ü—Ä–æ—Ü–µ–Ω—Ç –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫ (> 10 —Å–µ–∫)
  ROUND(
    COUNT(CASE WHEN cl.load_time_ms > 10000 THEN 1 END) * 100.0 / COUNT(*), 
    1
  ) as slow_loads_percent,
  
  -- –°—Ç–∞—Ç—É—Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  CASE
    WHEN AVG(cl.load_time_ms) > 15000 THEN 'üî¥ –ö–†–ò–¢–ò–ß–ù–û'
    WHEN AVG(cl.load_time_ms) > 8000 THEN 'üü† –ú–ï–î–õ–ï–ù–ù–û'
    WHEN AVG(cl.load_time_ms) > 4000 THEN 'üü° –ù–û–†–ú–ê'
    ELSE 'üü¢ –ë–´–°–¢–†–û'
  END as performance_status,
  
  -- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  CASE
    WHEN AVG(cl.load_time_ms) > 15000 AND s.viz_type = 'table' THEN 'üìä –î–æ–±–∞–≤–∏—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é –≤ —Ç–∞–±–ª–∏—Ü—É'
    WHEN AVG(cl.load_time_ms) > 15000 THEN '‚ö° –ö—Ä–∏—Ç–∏—á–Ω–æ: –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å SQL –∑–∞–ø—Ä–æ—Å'
    WHEN AVG(cl.load_time_ms) > 8000 AND s.viz_type IN ('line', 'bar') THEN 'üìà –£–º–µ–Ω—å—à–∏—Ç—å –ø–µ—Ä–∏–æ–¥ –¥–∞–Ω–Ω—ã—Ö'
    WHEN AVG(cl.load_time_ms) > 8000 THEN 'üîß –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å'
    WHEN COUNT(CASE WHEN cl.load_time_ms > 10000 THEN 1 END) > COUNT(*) * 0.3 THEN 'üìä –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'
    ELSE '‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –Ω–æ—Ä–º–µ'
  END as recommendation,
  
  -- –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–≥—Ä—É–∑–∫–∞
  MAX(cl.dttm) as last_load

FROM chart_loads cl
LEFT JOIN slices s ON s.id = cl.chart_id
LEFT JOIN dashboards d ON d.id = cl.dashboard_id

WHERE cl.load_time_ms IS NOT NULL
  AND cl.load_time_ms > 0  -- –ò—Å–∫–ª—é—á–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è

GROUP BY 
  cl.chart_id,
  s.slice_name,
  s.viz_type,
  d.dashboard_title

HAVING ROUND(AVG(cl.load_time_ms / 1000.0), 2) > 4 -- COUNT(*) >= 5  -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —á–∞—Ä—Ç—ã —Å 5+ –∑–∞–≥—Ä—É–∑–∫–∞–º–∏

ORDER BY 
  AVG(cl.load_time_ms) DESC,  -- –°–Ω–∞—á–∞–ª–∞ —Å–∞–º—ã–µ –º–µ–¥–ª–µ–Ω–Ω—ã–µ
  COUNT(*) DESC;





----------------

-- –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–∞—à–±–æ—Ä–¥–æ–≤ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
SELECT 
    t.dashboard_id,
    t2.dashboard_title,
    date_trunc('month', event_day) as month,
    COUNT(*) as load_count,
    COUNT(DISTINCT user_id) as affected_users,
    ROUND(AVG(load_time_ms), 0) as avg_load_time_ms,
    ROUND(AVG(load_time_ms)/1000.0, 2) as avg_load_time_sec,
    MIN(load_time_ms) as min_load_ms,
    MAX(load_time_ms) as max_load_ms,
    -- –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    CASE 
        WHEN AVG(load_time_ms) > 4000 THEN 'üî¥ –ö—Ä–∏—Ç–∏—á–Ω–æ –º–µ–¥–ª–µ–Ω–Ω—ã–π'
        WHEN AVG(load_time_ms) > 2500 THEN 'üü† –ú–µ–¥–ª–µ–Ω–Ω—ã–π'
        WHEN AVG(load_time_ms) > 1500 THEN 'üü° –°—Ä–µ–¥–Ω–∏–π'
        ELSE 'üü¢ –ë—ã—Å—Ç—Ä—ã–π'
    END as performance_status,
    -- –ü—Ä–æ—Ü–µ–Ω—Ç –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫ (< 2 —Å–µ–∫)
    ROUND(
        COUNT(CASE WHEN load_time_ms < 2000 THEN 1 END) * 100.0 / COUNT(*), 
        1
    ) as fast_loads_percent,
    -- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–µ–π—Å—Ç–≤–∏—è–º
    CASE 
        WHEN AVG(load_time_ms) > 4000 THEN '–ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è'
        WHEN AVG(load_time_ms) > 2500 THEN '–¢—Ä–µ–±—É–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏'
        WHEN AVG(load_time_ms) > 1500 THEN '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥'
        ELSE '–ù–æ—Ä–º–∞'
    END as action_needed
FROM (
    SELECT
        user_id,
        date_trunc('day', dttm) AS event_day,
        (SUBSTRING(json FROM 'source_id[" :]+([0-9]+)')::INT) AS dashboard_id,
        (SUBSTRING(json FROM 'mount_duration[" :]+([0-9]+)')::INT) AS load_time_ms,
        SUBSTRING(json FROM 'is_soft_navigation[" :]+(true|false)') AS is_soft_navigation,
        SUBSTRING(json FROM 'is_empty[" :]+(true|false)') AS is_empty,
        SUBSTRING(json FROM 'is_published[" :]+(true|false)') AS is_published
    FROM logs
    WHERE
        json LIKE '%mount_dashboard%'
        AND json LIKE '%source_id%'
        AND json LIKE '%mount_duration%'
        AND dttm >= CURRENT_DATE - interval '1 week'
) t
LEFT JOIN (
    SELECT DISTINCT id, dashboard_title 
    FROM dashboards
) t2 ON t2.id = t.dashboard_id
WHERE t.dashboard_id IS NOT NULL AND t.load_time_ms IS NOT NULL
GROUP BY t.dashboard_id, t2.dashboard_title, date_trunc('month', event_day)
HAVING AVG(load_time_ms) > 2000  -- –ú–µ–¥–ª–µ–Ω–Ω–µ–µ 2 —Å–µ–∫—É–Ω–¥
ORDER BY avg_load_time_ms DESC, load_count DESC;




---------------------------------------
WITH chart_errors AS (
  SELECT
    SUBSTRING(json FROM '"slice_id": ?([0-9]+)')::INT as chart_id,
    SUBSTRING(json FROM '"source_id": ?([0-9]+)')::INT AS dashboard_id,
    dttm,
    -- –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫ –¥–ª—è —á–∞—Ä—Ç–æ–≤
    CASE
      WHEN json LIKE '%timeout%' OR json LIKE '%TimeoutError%' THEN 'TIMEOUT'
      WHEN json LIKE '%connection%' OR json LIKE '%ConnectionError%' THEN 'CONNECTION'
      WHEN json LIKE '%permission%' OR json LIKE '%PermissionError%' THEN 'PERMISSION'
      WHEN json LIKE '%failed_query%' OR json LIKE '%QueryError%' THEN 'SQL_ERROR'
      WHEN json LIKE '%memory%' OR json LIKE '%MemoryError%' THEN 'MEMORY'
      WHEN json LIKE '%DML is not allowed%' THEN 'DML_VIOLATION'
      WHEN json LIKE '%viz_type%' OR json LIKE '%visualization%' THEN 'VISUALIZATION_ERROR'
      WHEN json LIKE '%form_data%' THEN 'CONFIG_ERROR'
      WHEN json LIKE '%datasource%' THEN 'DATASOURCE_ERROR'
      -- –î–æ–±–∞–≤–∏–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –æ—à–∏–±–∫—É –∏–∑ –≤–∞—à–∏—Ö –ª–æ–≥–æ–≤
      WHEN json LIKE '%Can''t load plugin%' OR json LIKE '%sqlalchemy.dialects%' THEN 'PLUGIN_ERROR'
      ELSE 'OTHER_ERROR'
    END as error_category,
    SUBSTRING(json FROM '"impression_id": ?"([^"]+)"') as session_id,
    -- –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    SUBSTRING(json FROM '"error_details": ?"([^"]+)"') as error_details
  FROM logs
  WHERE json LIKE '%error%'
    AND (json LIKE '%slice_id%' OR json LIKE '%chart%')
    AND dttm >= CURRENT_DATE - INTERVAL '7 days'
)

SELECT
  ce.chart_id,
  s.slice_name as chart_name,
  s.viz_type as chart_type,
  ce.error_category,
  -- –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∞—à–±–æ—Ä–¥–∞
  ce.dashboard_id,
  d.dashboard_title as parent_dashboard,
  -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫
  COUNT(*) as total_errors,
  COUNT(DISTINCT ce.session_id) as affected_sessions,
  COUNT(DISTINCT DATE(ce.dttm)) as error_days,
  -- –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  MIN(ce.dttm) as first_error,
  MAX(ce.dttm) as last_error,
  ROUND(COUNT(*)::DECIMAL / COUNT(DISTINCT DATE(ce.dttm)), 2) as avg_errors_per_day,
  -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –æ—à–∏–±–∫—É (–ø–µ—Ä–≤—É—é –≤—Å—Ç—Ä–µ—á–µ–Ω–Ω—É—é)
  MIN(ce.error_details) as sample_error,
  -- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏ —Å—Ç–∞—Ç—É—Å
  CASE
    WHEN COUNT(*) > 30 AND ce.error_category IN ('TIMEOUT', 'SQL_ERROR') THEN 'üö® –ö–†–ò–¢–ò–ß–ù–û'
    WHEN COUNT(*) > 15 OR ce.error_category = 'DML_VIOLATION' THEN 'üî¥ –í–´–°–û–ö–ò–ô'
    WHEN COUNT(*) > 5 THEN 'üü† –°–†–ï–î–ù–ò–ô'
    ELSE 'üü° –ù–ò–ó–ö–ò–ô'
  END as priority,
  -- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —á–∞—Ä—Ç–æ–≤
  CASE
    WHEN ce.error_category = 'TIMEOUT' THEN '‚ö° –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å SQL –∑–∞–ø—Ä–æ—Å —á–∞—Ä—Ç–∞'
    WHEN ce.error_category = 'CONNECTION' THEN 'üîå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏—Å—Ç–æ—á–Ω–∏–∫—É –¥–∞–Ω–Ω—ã—Ö'
    WHEN ce.error_category = 'PERMISSION' THEN 'üîê –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–∞–º'
    WHEN ce.error_category = 'SQL_ERROR' THEN 'üîß –ò—Å–ø—Ä–∞–≤–∏—Ç—å SQL –≤ —á–∞—Ä—Ç–µ'
    WHEN ce.error_category = 'MEMORY' THEN 'üíæ –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –æ–±—ä–µ–º –¥–∞–Ω–Ω—ã—Ö –≤ —á–∞—Ä—Ç–µ'
    WHEN ce.error_category = 'DML_VIOLATION' THEN 'üö´ –£–±—Ä–∞—Ç—å DML –∏–∑ SQL —á–∞—Ä—Ç–∞'
    WHEN ce.error_category = 'VISUALIZATION_ERROR' THEN 'üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏'
    WHEN ce.error_category = 'CONFIG_ERROR' THEN '‚öôÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —á–∞—Ä—Ç–∞'
    WHEN ce.error_category = 'DATASOURCE_ERROR' THEN 'üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö'
    WHEN ce.error_category = 'PLUGIN_ERROR' THEN 'üîå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–ª–∞–≥–∏–Ω Trino'
    ELSE 'üîç –¢—Ä–µ–±—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞'
  END as recommendation

FROM chart_errors ce
LEFT JOIN slices s ON s.id = ce.chart_id
LEFT JOIN dashboards d ON d.id = ce.dashboard_id

GROUP BY 
  ce.chart_id,
  s.slice_name,
  s.viz_type,
  ce.error_category,
  ce.dashboard_id,
  d.dashboard_title

ORDER BY
  CASE
    WHEN COUNT(*) > 30 THEN 1
    WHEN COUNT(*) > 15 THEN 2
    WHEN COUNT(*) > 5 THEN 3
    ELSE 4
  END,
  COUNT(*) DESC;
